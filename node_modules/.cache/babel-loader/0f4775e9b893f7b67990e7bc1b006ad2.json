{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyCgrLxpBwAG3UB4yCaK3JS8n-qcSNNEJQ8\",\n  authDomain: \"ecom-db-8b8b4.firebaseapp.com\",\n  projectId: \"ecom-db-8b8b4\",\n  storageBucket: \"ecom-db-8b8b4.appspot.com\",\n  messagingSenderId: \"720860510770\",\n  appId: \"1:720860510770:web:24056f30259610b2f4da2b\",\n  measurementId: \"G-90L332Z8J5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  console.log(snapshot);\n\n  if (!snapshot) {\n    const {\n      displayname,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayname,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log('error creating user', err.message);\n    }\n  }\n\n  return userRef;\n  /*\r\n  const snapShot = await userRef.get();\r\n  \r\n  \r\n  */\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const Signinwithgoogle = () => auth.signInWithPopup(provider);\n_c = Signinwithgoogle;\nexport default firebase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signinwithgoogle\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/prov-react/ecom-shop/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","console","log","displayname","email","createdAt","Date","set","err","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","Signinwithgoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAQ,eAAR;AACA,OAAQ,oBAAR;AAKE,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,SAAS,EAAE,eAHE;AAIbC,EAAAA,aAAa,EAAE,2BAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAkC;AAEzE,MAAG,CAACD,QAAJ,EAAa;AACX;AACD;;AACD,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAG,CAACA,QAAJ,EAAa;AACX,UAAM;AAACI,MAAAA,WAAD;AAAeC,MAAAA;AAAf,QAAwBX,QAA9B;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMX,OAAO,CAACY,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AACHC,QAAAA,KADG;AACKC,QAAAA,SADL;AACiB,WAAGX;AADpB,OAAZ,CAAN;AAGD,KAJD,CAIC,OAAMc,GAAN,EAAU;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,GAAG,CAACC,OAAvC;AACD;AACF;;AAED,SAAOd,OAAP;AAEA;AACJ;AACA;AACA;AACA;AACG,CA7BM;AA+BPZ,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAGP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA7B;KAAMI,gB;AAEb,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport  'firebase/auth';\r\nimport  'firebase/firestore';\r\n\r\n\r\n\r\n\r\n  const config = {\r\n    apiKey: \"AIzaSyCgrLxpBwAG3UB4yCaK3JS8n-qcSNNEJQ8\",\r\n    authDomain: \"ecom-db-8b8b4.firebaseapp.com\",\r\n    projectId: \"ecom-db-8b8b4\",\r\n    storageBucket: \"ecom-db-8b8b4.appspot.com\",\r\n    messagingSenderId: \"720860510770\",\r\n    appId: \"1:720860510770:web:24056f30259610b2f4da2b\",\r\n    measurementId: \"G-90L332Z8J5\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async(userAuth, additionalData) =>{\r\n\r\n    if(!userAuth){\r\n      return;\r\n    }\r\n    const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n    const snapshot = await userRef.get();\r\n    console.log(snapshot);\r\n     \r\n    if(!snapshot){\r\n      const {displayname , email} = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayname, email , createdAt , ...additionalData\r\n        })\r\n      }catch(err){\r\n        console.log('error creating user', err.message);\r\n      }\r\n    }\r\n\r\n    return userRef;\r\n\r\n    /*\r\nconst snapShot = await userRef.get();\r\n    \r\n    \r\n    */\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const Signinwithgoogle = ()=>auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}